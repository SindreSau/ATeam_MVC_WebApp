<!DOCTYPE html>
<html lang="en" class="h-100">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - ATeam_MVC_WebApp</title>

    @* Add FastBootstrap *@
    <link href="https://cdn.jsdelivr.net/npm/fastbootstrap@2.2.0/dist/css/fastbootstrap.min.css" rel="stylesheet" integrity="sha256-V6lu+OdYNKTKTsVFBuQsyIlDiRWiOmtC8VQ8Lzdm2i4=" crossorigin="anonymous">

    @* Add FontAwesome for icons *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

    <link rel="icon" type="image/svg" href="~/favicon.svg"/>

    <!-- Add global styles -->
    <style>
        :root {
            transition: color-scheme .3s ease-in-out,
            background-color .3s ease-in-out,
            border-color .3s ease-in-out,
            box-shadow .3s ease-in-out,
            color .3s ease-in-out;
        }

        .theme-icon-transition {
            transition: transform .3s ease-in-out;
        }

        .theme-icon-transition:hover {
            transform: rotate(25deg);
        }

        button, a.btn, input[type="submit"], input[type="button"] {
            transition: outline 0.1s ease-in-out; /* Smooth transition for the outline */
        }

        button:focus, a.btn:focus, input[type="submit"]:focus, input[type="button"]:focus {
            outline: 2px solid #007bff; /* Add outline on focus */
            outline-offset: 2px;
        }

        #theme-toggle:focus {
            outline: 2px solid #007bff; /* Add focus outline for the theme toggle button */
            outline-offset: 2px;
        }

        .btn-primary:focus {
            outline: 2px solid #007bff; /* Ensure the Create Product button has focus outline */
            outline-offset: 2px;
        }
    </style>
</head>
<body class="min-vh-100 d-flex flex-column">
<header>
    <nav class="navbar navbar-expand-sm border-bottom py-2">
        <div class="container-fluid">
            <a class="navbar-brand d-flex align-items-center" asp-area="" asp-controller="Vendor" asp-action="Index">
                <img src="~/assets/nokkelhollet-logo.svg" alt="Nøkkelhollet" class="me-2" style="height: 40px; width: auto;"/>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">

                    @if (User.IsInRole("Admin"))
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Admin" asp-action="Index">Admin</a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Vendor" asp-action="Index">Vendor</a>
                        </li>
                    }

                </ul>

                <!-- Theme Toggle Button -->
                <div class="nav-item me-3">
                    <button class="btn px-2" id="theme-toggle">
                        <i class="fas fa-sun theme-icon-transition" id="theme-icon"></i>
                    </button>
                </div>
                <partial name="_LoginPartial"/>
            </div>
        </div>
    </nav>
</header>

<main class="flex-grow-1">
    <div class="container py-4">
        @RenderBody()
    </div>
</main>

<footer class="py-3 border-top ">
    <div class="container text-muted">
        &copy; 2024 - ATeam_MVC_WebApp
    </div>
</footer>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
@await RenderSectionAsync("Scripts", required: false)

@* Light/darkmode script *@
<script>
    (() => {
        const getStoredTheme = () => localStorage.getItem('theme')
        const setStoredTheme = theme => localStorage.setItem('theme', theme)

        const getPreferredTheme = () => {
            const storedTheme = getStoredTheme()
            if (storedTheme) {
                return storedTheme
            }
            return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
        }

        const setTheme = theme => {
            document.documentElement.setAttribute('data-bs-theme', theme)
            // Update icon
            const icon = document.getElementById('theme-icon')
            if (theme === 'dark') {
                icon.classList.remove('fa-sun')
                icon.classList.add('fa-moon')
            } else {
                icon.classList.remove('fa-moon')
                icon.classList.add('fa-sun')
            }
        }

        // Set initial theme
        setTheme(getPreferredTheme())

        // Add click handler
        document.getElementById('theme-toggle').addEventListener('click', () => {
            const currentTheme = document.documentElement.getAttribute('data-bs-theme')
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark'
            setStoredTheme(newTheme)
            setTheme(newTheme)
        })

        // Listen for system theme changes
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
            const storedTheme = getStoredTheme()
            if (storedTheme !== 'light' && storedTheme !== 'dark') {
                setTheme(getPreferredTheme())
            }
        })
    })()
</script>
</body>
</html>